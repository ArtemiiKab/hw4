{"version":3,"sources":["Dashboard/dashboard.tsx","Login/Login.tsx","NotFound/NotFound.tsx","routes.tsx","OAuth/OAuth.tsx","App.tsx","index.js"],"names":["REACT_APP_API_KEY","process","Dashboard","state","name","boards","goBack","props","history","requestUrl","fetch","token","then","it","json","setState","this","map","board","className","onClick","length","renderBoards","React","Component","REACT_APP_APP_NAME","REACT_APP_REDIRECT_URL","REACT_APP_SCOPE","Login","href","NotFound","routes","path","render","title","isHidden","exact","to","OAuth","hash","location","onSetToken","split","App","setToken","route","index","key","renderHeader","renderContent","ReactDOM","document","getElementById"],"mappings":"yRAEQA,EAAsBC,mCAqCjBC,EAAb,2MACSC,MAAe,CACpBC,KAAM,GACNC,OAAQ,IAHZ,EAMUC,OAAS,WACf,EAAKC,MAAMC,QAAQF,UAPvB,EAUUG,WAAa,WACnBC,MAAM,mDAAD,OACgDV,EADhD,kBAC2E,EAAKO,MAAMI,QAExFC,MAAK,SAAAC,GAAE,OAAIA,EAAGC,UACdF,MAAK,SAAAC,GAAE,OAAI,EAAKE,SAAS,CAAEV,OAAQQ,QAf1C,8EAmBI,OAAOG,KAAKb,MAAME,OAAOY,KAAI,SAAAC,GAAK,OAChC,yBAAKC,UAAU,oBAAoBD,EAAMd,WApB/C,+BAyBI,OACE,6BACE,wBAAIgB,QAASJ,KAAKV,QAAlB,0BACA,yBAAKa,UAAU,aAAaC,QAASJ,KAAKP,YAA1C,eAGA,yBAAKU,UAAU,kBACZH,KAAKb,MAAME,OAAOgB,OAAS,EAAIL,KAAKM,eAAiB,gBAhChE,GAA+BC,IAAMC,W,ECjCjCvB,8NAJFD,E,EAAAA,kBACAyB,E,EAAAA,mBACAC,E,EAAAA,uBACAC,E,EAAAA,gBAGWC,EAAb,iLAEI,IAAMnB,EAAU,oDAAgDiB,EAAhD,iCAA+FD,EAA/F,kBAA2HE,EAA3H,oCAAsK3B,GAEtL,OACE,uBAAKmB,UAAU,gBACb,qBAAGU,KAAMpB,GAAT,6BACA,gDAPR,GAA2Bc,aCLdO,EAAW,SAACvB,GACvB,OAAO,0CCWIwB,EAA0B,CACrC,CACEC,KAAM,SACNC,OAAQ,SAAC1B,GAAD,OAAgB,gBAAC,EAAUA,IACnC2B,MAAO,SAGT,CACEF,KAAM,IACNG,UAAU,EACVC,OAAO,EACPH,OAAQ,kBAAM,gBAAC,IAAD,CAAUI,GAAG,aAE7B,CACEL,KAAM,OACNG,UAAU,EACVF,OAAQ,SAAC1B,GAAD,OAA+B,gBAAC,EAAaA,MCxB5C+B,EAAuC,SAAC,GAGlC,IAFLC,EAEI,EAFhBC,SAAYD,KAKZ,OADAE,EAFgB,EADhBA,YAEcF,EAAKG,MAAM,KAAK,IAEvB,kBAAC,IAAD,CAAUL,GAAI,gBCgBVM,G,MAAb,2MACSxC,MAAQ,CACbQ,MAAO,GACPN,OAAQ,IAHZ,EAMUuC,SAAW,SAACjC,GAClB,EAAKI,SAAS,CAAEJ,WAPpB,4EAWI,QAASK,KAAKb,MAAMQ,QAXxB,qCAeI,OACE,gCACGoB,EAAOd,KAAI,SAAC4B,EAAiBC,GAAlB,OACVD,EAAMV,SAAW,KACf,kBAAC,IAAD,CAAMhB,UAAU,eAAe4B,IAAKD,EAAOT,GAAIQ,EAAMb,aAnBjE,sCA0B2B,IAAD,OACtB,OACE,8BACE,kBAAC,IAAD,KACGD,EAAOd,KAAI,SAAC4B,EAAYC,GAAb,OACV,kBAAC,IAAD,CACEV,OAAK,EACLW,IAAKD,EACLd,KAAMa,EAAMb,KACZC,OAAQ,SAAA1B,GAAK,OAAIsC,EAAMZ,OAAN,eAAkB1B,UAGvC,kBAAC,IAAD,CACEyB,KAAK,SACLC,OAAQ,SAAC1B,GAAD,OACN,kBAAC,EAAD,iBAAWA,EAAX,CAAkBkC,WAAY,EAAKG,eAGvC,kBAAC,IAAD,CACEZ,KAAK,aACLC,OAAQ,SAAA1B,GAAK,OAAI,kBAAC,EAAD,iBAAeA,EAAf,CAAsBI,MAAO,EAAKR,MAAMQ,YAE3D,kBAAC,IAAD,CAAU0B,GAAG,aAhDvB,+BAuDI,OACE,yBAAKlB,UAAU,sBACZH,KAAKgC,eACLhC,KAAKiC,qBA1Dd,GAAyB1B,IAAMC,YCvB/B0B,IAASjB,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFkB,SAASC,eAAe,W","file":"static/js/main.5673861d.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport { RouteChildrenProps } from \"react-router-dom\";\r\nconst { REACT_APP_API_KEY } = process.env;\r\n\r\ninterface DashboardProps extends RouteChildrenProps {\r\n  hello?: string;\r\n  token?: string;\r\n}\r\n/*\r\nexport const Dashboard: FunctionComponent<DashboardProps> = ({\r\n  token,\r\n  ...rest\r\n}) => {\r\n  const [data, getData] = React.useState([]);\r\n\r\n  const getBoards = () => {\r\n    fetch(\r\n      `https://api.trello.com/1/members/artemiikabanov/boards?key=${REACT_APP_API_KEY}&token=${token}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(json => getData(json));\r\n  };\r\n  console.log(data);\r\n\r\n  return (\r\n    <div>\r\n      <div>Dashboard</div>\r\n      <button onClick={getBoards}>Show Boards</button>\r\n      {data.length !== 0 && data.map((boards, index) => <div>{}</div>)}\r\n    </div>\r\n  );\r\n};\r\n\r\n*/\r\n\r\ninterface State {\r\n  name: string;\r\n  boards: Array<{ name: string }>;\r\n}\r\nexport class Dashboard extends React.Component<DashboardProps, State> {\r\n  public state: State = {\r\n    name: \"\",\r\n    boards: []\r\n  };\r\n\r\n  private goBack = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  private requestUrl = () => {\r\n    fetch(\r\n      `https://api.trello.com/1/members/me/boards?&key=${REACT_APP_API_KEY}&token=${this.props.token}`\r\n    )\r\n      .then(it => it.json())\r\n      .then(it => this.setState({ boards: it }));\r\n  };\r\n\r\n  renderBoards() {\r\n    return this.state.boards.map(board => (\r\n      <div className=\"board_background\">{board.name}</div>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2 onClick={this.goBack}>Go back from Dashboard</h2>\r\n        <div className=\"btn_center\" onClick={this.requestUrl}>\r\n          Show boards\r\n        </div>\r\n        <div className=\"board_flex-row\">\r\n          {this.state.boards.length > 0 ? this.renderBoards() : \"Loading\"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nconst {\r\n  REACT_APP_API_KEY,\r\n  REACT_APP_APP_NAME,\r\n  REACT_APP_REDIRECT_URL,\r\n  REACT_APP_SCOPE\r\n} = process.env;\r\n\r\nexport class Login extends React.Component {\r\n  render() {\r\n    const requestUrl = `https://trello.com/1/authorize?return_url=${REACT_APP_REDIRECT_URL}&expiration=1day&name=${REACT_APP_APP_NAME}&scope=${REACT_APP_SCOPE}&response_type=token&key=${REACT_APP_API_KEY}`;\r\n\r\n    return (\r\n      <div className=\"login_center\">\r\n        <a href={requestUrl}>Login with Trello account</a>\r\n        <h2>Please Log In</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { RouteChildrenProps } from \"react-router\";\r\n\r\nexport const NotFound = (props: RouteChildrenProps) => {\r\n  return <h2>Not Found</h2>;\r\n};\r\n","import * as React from \"react\";\r\nimport { Redirect, RouteChildrenProps } from \"react-router-dom\";\r\nimport { Login } from \"./Login\";\r\nimport { Dashboard } from \"./Dashboard\";\r\nimport { NotFound } from \"./NotFound\";\r\nimport { OAuth } from \"./OAuth\";\r\n\r\nexport interface AppRoute {\r\n  path: string;\r\n  render: (props: any) => any;\r\n  title?: string;\r\n  isHidden?: boolean;\r\n  exact?: boolean;\r\n}\r\n\r\nexport const routes: Array<AppRoute> = [\r\n  {\r\n    path: \"/login\",\r\n    render: (props: any) => <Login {...props} />,\r\n    title: \"Login\"\r\n  },\r\n\r\n  {\r\n    path: \"/\",\r\n    isHidden: true,\r\n    exact: true,\r\n    render: () => <Redirect to=\"/login\" />\r\n  },\r\n  {\r\n    path: \"/404\",\r\n    isHidden: true,\r\n    render: (props: RouteChildrenProps) => <NotFound {...props} />\r\n  }\r\n];\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { RouteChildrenProps, Redirect } from \"react-router-dom\";\r\n\r\ninterface OAuthProps extends RouteChildrenProps {\r\n  onSetToken: (token: string) => void;\r\n}\r\n\r\nexport const OAuth: FunctionComponent<OAuthProps> = ({\r\n  location: { hash },\r\n  onSetToken\r\n}: OAuthProps) => {\r\n  const token = hash.split(\"=\")[1];\r\n  onSetToken(token);\r\n  return <Redirect to={\"/dashboard\"} />;\r\n};\r\n","import React from \"react\";\nimport {\n  Route,\n  Link,\n  RouteChildrenProps,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport { setToLocalStorage, getFromLocalStorage } from \"./utils\";\nimport { Dashboard } from \"./Dashboard\";\nimport { Login } from \"./Login\";\nimport { routes, AppRoute } from \"./routes\";\nimport { OAuth } from \"./OAuth\";\nimport \"./App.css\";\n\nconst TOKEN_STORAGE_KEY = \"TOKEN\";\n\ninterface Board {\n  id: string;\n  name: string;\n  desc?: string;\n  pinned: boolean;\n}\n\ninterface AppState {\n  token: string;\n  boards: Array<Board>;\n}\n\nexport class App extends React.Component<any, AppState> {\n  public state = {\n    token: \"\",\n    boards: []\n  };\n\n  private setToken = (token: string) => {\n    this.setState({ token });\n  };\n\n  private isLoggedIn() {\n    return !!this.state.token;\n  }\n\n  private renderHeader() {\n    return (\n      <header>\n        {routes.map((route: AppRoute, index: number) =>\n          route.isHidden ? null : (\n            <Link className=\"link_padding\" key={index} to={route.path}></Link>\n          )\n        )}\n      </header>\n    );\n  }\n\n  private renderContent() {\n    return (\n      <main>\n        <Switch>\n          {routes.map((route: any, index: number) => (\n            <Route\n              exact\n              key={index}\n              path={route.path}\n              render={props => route.render({ ...props })}\n            ></Route>\n          ))}\n          <Route\n            path=\"/oauth\"\n            render={(props: RouteChildrenProps) => (\n              <OAuth {...props} onSetToken={this.setToken} />\n            )}\n          />\n          <Route\n            path=\"/dashboard\"\n            render={props => <Dashboard {...props} token={this.state.token} />}\n          />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </main>\n    );\n  }\n\n  public render() {\n    return (\n      <div className=\"header_and_content\">\n        {this.renderHeader()}\n        {this.renderContent()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}